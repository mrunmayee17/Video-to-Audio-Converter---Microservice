<p> Instructions:</p>

<p>- Starting Kubernetes: minikube start - For latest versions before building docker file in each services: - Run following command:  pip3 freeze > requirements.txt</p>

<p>- Authentication Service:</p>

<p> cd to auth:</p>

<p> Run following commands on terminal:  source ./venv/bin/activate</p>

<p> Database commands:  Mysql -uroot > init.sql</p>

<p> To view database:  use auth;  show tables;  select * from user;</p>

<p> # docker commands  docker build .  docker tag &#96;SHA key from out put of docker build command&#96; &#96;dockerhub account name&#96;/auth:latest  docker push &#96;dockerhub account name&#96;/auth:latest</p>

<p> cd to manifests:</p>

<p> Run following commands on terminal:</p>

<p> kubectl apply -f ./</p>

<p>  - Gateway Service:</p>

<p> cd to gateway:</p>

<p> Run following commands on terminal:  source ./venv/bin/activate  # docker commands  docker build .  docker tag &#96;SHA key from out put of docker build command&#96; &#96;dockerhub account name&#96;/gateway:latest  docker push &#96;dockerhub account name&#96;/gateway:latest</p>

<p> cd to manifests:</p>

<p> Run following commands on terminal:</p>

<p> kubectl apply -f ./</p>

<p>- RabbitMQ Service:</p>

<p> cd to rabbit:</p>

<p> Run following commands on terminal:</p>

<p> # docker commands  docker build .  docker tag &#96;SHA key from out put of docker build command&#96; &#96;dockerhub account name&#96;/rabbit:latest  docker push &#96;dockerhub account name&#96;/rabbit:latest</p>

<p> cd to manifests:</p>

<p> Run following commands on terminal:</p>

<p> kubectl apply -f ./</p>

<p>  minikube tunnel  Enter laptop password  # To view rabbit mq service</p>

<p> Go to rabbitmq-manager.com  Username: guest  Password: guest</p>

<p> - Converter Service:</p>

<p> cd to converter:</p>

<p> Run following commands on terminal:  source ./venv/bin/activate  # docker commands  docker build .  docker tag &#96;SHA key from out put of docker build command&#96; &#96;dockerhub account name&#96;/converter:latest  docker push &#96;dockerhub account name&#96;/auth:latest</p>

<p> cd to manifests:</p>

<p> Run following commands on terminal:</p>

<p> kubectl apply -f ./</p>

<p>- Video to Audio Conversion by sending curl request:</p>

<p>Run following commands on Terminal:  1 curl -X POST http://mp3converter.com/login -u &#96;emailid in mysql db&#96;: &#96;password in mysql db&#96;  ex. curl -X POST http://mp3converter.com/login -u mrunmayeerane98@gmail.com:Admin123  2. you will receive a key from above command   3. go to directory containing video  4. curl -X POST -F 'file=@./videofilename' -H 'Authorization: Bearer (key)' http://mp3converter.com/upload  - Ex. curl -X POST -F 'file=@./test.mp4' -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1ydW5tYXllZXJhbmU5OEBnbWFpbC5jb20iLCJleHAiOjE2NzkxMDY2MzMsImlhdCI6MTY3OTAyMDIzMywiYWRtaW4iOnRydWV9.mp-md8gpwf5lWptsXMSRQQjfmMX7lsFkZTAKwbBxJbo' http://mp3converter.com/upload  # for viewing database:  Terminal Commands:  - mongosh  - show databases;  - usemp3s;  5. Go to rabbitmq-manager.com, use above credentials(guest)  - go to Queues  - Click on Get Message:  - in payload mp3_fid is given as in screenshot:</p>

<p> 6. Use mp3_id to download audio file using curl request  - Mongofiles --db=mp3s get_id --local=audiofilename.mp3 '{ $oid: &quot;(mp3id)}'  - Ex. mongofiles --db=mp3s get_id --local=test.mp3 '{&quot;$oid&quot;: &quot;6412e996ee8dfde2d885d62e&quot;}'</p>

<p> References:  - https://www.youtube.com/watch?v=hmkF77F9TLw</p>

<p></p>